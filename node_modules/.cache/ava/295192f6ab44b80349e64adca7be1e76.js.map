{"version":3,"sources":["tests/unit/bill.test.js"],"names":["Promise","require","test","sinon","createSandbox","usingPromise","beforeEach","t","context","sandbox","afterEach","always","restore"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,KAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEAE,KAAK,CAACC,aAAN,GAAsBC,YAAtB,CAAmCL,OAAO,CAACA,OAA3C;AAEAE,IAAI,CAACI,UAAL,CAAgB,yCAAhB,EAA2D,MAAOC,CAAP,IAAa;AACpEA,EAAAA,CAAC,CAACC,OAAF,CAAUC,OAAV,GAAoBN,KAAK,CAACC,aAAN,GAAsBC,YAAtB,CAAmCL,OAAO,CAACA,OAA3C,CAApB;AACH,CAFD;AAIAE,IAAI,CAACQ,SAAL,CAAeC,MAAf,CAAsB,mDAAtB,EAA2E,MAAOJ,CAAP,IAAa;AACpFA,EAAAA,CAAC,CAACC,OAAF,CAAUC,OAAV,CAAkBG,OAAlB;AACH,CAFD","sourceRoot":"/Users/pradityahendrik/shopee","sourcesContent":["'use strict';\n\nconst Promise = require('bluebird');\nconst test = require('ava');\nconst sinon = require('sinon');\n\nsinon.createSandbox().usingPromise(Promise.Promise);\n\ntest.beforeEach('Initialize New Sandbox Before Each Test', async (t) => {\n    t.context.sandbox = sinon.createSandbox().usingPromise(Promise.Promise);\n});\n\ntest.afterEach.always('Restore Sandbox and Configuration After Each Test', async (t) => {\n    t.context.sandbox.restore();\n});\n"]}